name: Deploy docs
on:
  - push
jobs:
  deploy_docs:
    name: Deploy docs
    runs-on: ubuntu-latest
    steps:

      - name: Check out repository
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2-beta
        with:
          node-version: 12

      - name: Cache NPM dependencies
        uses: actions/cache@v2
        env:
          cache-hash: ${{ hashFiles('pnpm-lock.yaml') }}
        with:
          path: ~/.pnpm-store
          key: pnpm-os_${{ runner.os }}-node_${{ matrix.node }}-lock_${{ env.cache-hash }}
          restore-keys: |
            pnpm-os_${{ runner.os }}-node_${{ matrix.node }}-
            pnpm-os_${{ runner.os }}-
            pnpm-

      - name: Pull dependencies
        uses: pnpm/action-setup@v2.0.1
        with:
          version: 6.3.0
          run_install: true

      - name: Build docs
        env:
          NODE_OPTIONS: --max_old_space_size=4096
        run: |
          cd apps/govuk-docs/
          npm run build

      - name: Package docs
        run: |
          cd apps/govuk-docs/
          npm run package:serverless
          mkdir -p .netlify/functions .netlify/publish
          cd .netlify
          cp -a ../.serverless/govuk-docs.zip functions/
          echo "process.env['MODE'] = 'serverless'; module.exports = require('./dist/server/index.js');" > govuk-docs.js
          zip -mv functions/govuk-docs.zip govuk-docs.js
          mv ../dist/public/entrypoints.json .
          cp -a ../dist/public/ publish/public
          mv entrypoints.json ../dist/public/
          echo "/* /.netlify/functions/govuk-docs/:splat 200" > publish/_redirects

      - name: Deploy to prod?
        id: target
        run: echo "##[set-output name=flag;]$([[ \"${GITHUB_REF#refs/heads/}\" == \"master\" ]] && echo \"--prod\" || true)"

      - name: Deploy docs
        id: deploy
        uses: netlify/actions/cli@master
        with:
          args: deploy --dir='apps/govuk-docs/.netlify/publish/' --functions='apps/govuk-docs/.netlify/functions/' ${{ steps.target.outputs.flag }}
        env:
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}

      - name: Scan docs links
        id: linkscan
        uses: JustinBeckwith/linkinator-action@v1
        with:
          config: apps/govuk-docs/linkinator.config.json
          paths: ${{ steps.deploy.outputs.NETLIFY_URL }}

      - name: Check docs scan results
        uses: r26d/jq-action@master
        env:
          SELECTOR: '.links | .[] | select(.state | contains("BROKEN"))'
          TEMPLATE: '.state, " link [", .status, "] in page ", .parent, ", for target: ", .url, "\n"'
          OUTCOME: '.passed | "Links and assets verified: ", .'
        with:
          cmd: |
            cd apps/govuk-docs/
            echo "${{ steps.linkscan.outputs.value }}" \
              | jq -jre "( ${{ env.SELECTOR }} | ${{ env.TEMPLATE }} ), ( ${{ env.OUTCOME }} )"
